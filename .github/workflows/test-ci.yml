# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Name of environment to use respective environment secrets
    environment: protected_branches

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Runs webhook to start gitlab pipeline
      - name: Trigger gitlab pipeline
        run: curl -X POST --fail -F token=${{ secrets.GITLAB_WEBTRIGGER_TOKEN }} -F ref=main https://gitlab.icp.uni-stuttgart.de/api/v4/projects/950/trigger/pipeline

      # Wait for gitlab pipeline with active polling
      - name: wait for gitlab pipeline
        run: |
          pipeline_id=$(curl https://gitlab.icp.uni-stuttgart.de/api/v4/projects/950/pipelines | jq '.[0].id')
          ci_status="pending"
          until [[ "$ci_status" != "pending" && "$ci_status" != "running" ]]
          do
             sleep 10
             ci_output=$(curl https://gitlab.icp.uni-stuttgart.de/api/v4/projects/950/pipelines/${pipeline_id})
             ci_status=$(jq -n "$ci_output" | jq -r .status)
             ci_web_url=$(jq -n "$ci_output" | jq -r .web_url)
             
             echo "Current pipeline status: ${ci_status}"
             if [ "$ci_status" = "running" ]
             then
               echo "Checking pipeline status..."
               curl -d '{"state":"pending", "target_url": "'${ci_web_url}'", "context": "gitlab-ci"}' -H "Authorization: token ${GITHUB_TOKEN}"  -H "Accept: application/vnd.github.antiope-preview+json" -X POST --silent "https://api.github.com/repos/${GITHUB_REPOSITORY}/statuses/${GITHUB_SHA}"  > /dev/null 
             fi
          done

          echo "Pipeline finished with status ${ci_status}"
